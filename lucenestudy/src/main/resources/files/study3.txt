Apache Commons logo
Apache Commons ™Last Published: 23 May 2015|Version: 15
Components
Sandbox
Dormant
ApacheCon
Apache
COMMONS
Home
License
Mailing Lists
PMC
Components
Sandbox
Dormant
RELEASES
Releases
SOURCE REPOSITORIES
General Information
Components
Sandbox
Dormant
GENERAL INFORMATION
Security
Volunteering
Contributing Patches
Building Components
Commons Parent Pom
Commons Build Plugin
Site Publication
Releasing Components
Wiki
ASF
How the ASF works
Get Involved
Developer Resources
Sponsorship
Thanks
ApacheCon
Maven	
Welcome to Apache Commons
Apache Commons is an Apache project focused on all aspects of reusable Java components.

The Apache Commons project is composed of three parts:

The Commons Proper - A repository of reusable Java components.
The Commons Sandbox - A workspace for Java component development.
The Commons Dormant - A repository of components that are currently inactive.
You may also read our charter, which spells out the goals of the project in greater detail.

The Apache Commons source code repositories are writable for all ASF committers. While Apache Commons is a Commit-Then-Review community, we would consider it polite and helpful for contributors to announce their intentions and plans on the dev mailing list before committing code. All contributors should read our contributing guidelines. We accept patches as SVN diff files uploaded to the Apache bugtracker or as pull request via our github mirrors.

Apache Commons Proper
Commons Proper is dedicated to one principal goal: creating and maintaining reusable Java components. The Commons Proper is a place for collaboration and sharing, where developers from throughout the Apache community can work together on projects to be shared by the Apache projects and Apache users.

Commons developers will make an effort to ensure that their components have minimal dependencies on other libraries, so that these components can be deployed easily. In addition, Commons components will keep their interfaces as stable as possible, so that Apache users (including other Apache projects) can implement these components without having to worry about changes in the future.

This article gives an overview of (some of) the components which can be found here.

We welcome participation from all that are interested, at all skill levels. Coding, documentation and testing are all critical parts of the software development process. If you are interested in participating in any of these aspects, please join us!

Components	Description	Latest Version	Released
BCEL	Byte Code Engineering Library - analyze, create, and manipulate Java class files	5.2	2007-06-14
BeanUtils	Easy-to-use wrappers around the Java reflection and introspection APIs.	1.9.2	2014-05-29
BSF	Bean Scripting Framework - interface to scripting languages, including JSR-223	3.1	2010-24-06
Chain	Chain of Responsibility pattern implemention.	1.2	2008-06-02
CLI	Command Line arguments parser.	1.3	2015-05-09
Codec	General encoding/decoding algorithms (for example phonetic, base64, URL).	1.10	2014-11-09
Collections	Extends or augments the Java Collections Framework.	4.0	2013-11-24
Compress	Defines an API for working with tar, zip and bzip2 files.	1.9	2014-10-09
Configuration	Reading of configuration/preferences files in various formats.	2.0-alpha2	2014-12-20
CSV	Component for reading and writing comma separated value files.	1.1	2014-11-27
Daemon	Alternative invocation mechanism for unix-daemon-like java code.	1.0.15	2013-03-04
DBCP	Database connection pooling services.	2.0.1	2014-05-24
DbUtils	JDBC helper library.	1.6	2014-07-20
Digester	XML-to-Java-object mapping utility.	3.2	2011-12-13
Discovery	Tools for locating resources by mapping service/reference names to resource names.	0.5	2011-04-28
EL	Interpreter for the Expression Language defined by the JSP 2.0 specification.	1.0	2003-06-18
Email	Library for sending e-mail from Java.	1.4	2015-05-23
Exec	API for dealing with external process execution and environment management in Java.	1.3	2014-11-06
FileUpload	File upload capability for your servlets and web applications.	1.3.1	2014-02-07
Functor	A functor is a function that can be manipulated as an object, or an object representing a single, generic function.	N/A	N/A
Imaging (previously called Sanselan)	A pure-Java image library.	N/A	N/A
IO	Collection of I/O utilities.	2.4	2012-06-12
JCI	Java Compiler Interface	1.1	2013-10-14
JCS	Java Caching System	1.3	2007-06-05
Jelly	XML based scripting and processing engine.	1.0	2005-06-16
Jexl	Expression language which extends the Expression Language of the JSTL.	2.1.1	2011-12-24
JXPath	Utilities for manipulating Java Beans using the XPath syntax.	1.3	2008-08-14
Lang	Provides extra functionality for classes in java.lang.	3.4	2015-04-06
Launcher	Cross platform Java application launcher.	1.1	2004-08-22
Logging	Wrapper around a variety of logging API implementations.	1.2	2014-07-11
Math	Lightweight, self-contained mathematics and statistics components.	3.4	2014-12-26
Modeler	Mechanisms to create Model MBeans compatible with JMX specification.	2.0.1	2007-06-25
Net	Collection of network utilities and protocol implementations.	3.3	2013-06-12
OGNL	An Object-Graph Navigation Language	N/A	N/A
Pool	Generic object pooling component.	2.3	2014-12-30
Primitives	Smaller, faster and easier to work with types supporting Java primitive types.	1.0	2003-11-05
Proxy	Library for creating dynamic proxies.	1.0	2008-02-28
SCXML	An implementation of the State Chart XML specification aimed at creating and maintaining a Java SCXML engine.
It is capable of executing a state machine defined using a SCXML document, and abstracts out the environment interfaces.	0.9	2008-12-01
Validator	Framework to define validators and validation rules in an xml file.	1.4.1	2014-01-13
VFS	Virtual File System component for treating files, FTP, SMB, ZIP and such like as a single logical file system.	2.0	2011-08-24
Weaver	Provides an easy way to enhance (weave) compiled bytecode.	1.1	2014-09-30
The Commons Sandbox
The Commons project also contains a workspace that is open to all Apache committers. It's a place to try out new ideas and prepare for inclusion into the Commons portion of the project or into another Apache project. Users are free to experiment with the components developed in the sandbox, but sandbox components will not necessarily be maintained, particularly in their current state.

See here for Sandbox components.

The Commons Dormant
These are Commons components that have been deemed inactive since they have seen little recent development activity. If you wish to use any of these components, you must build them yourselves. It is best to assume that these components will not be released in the near future.

See here for Dormant components.

Where do I get releases?
The individual components have independent releases. Some releases for some components may be available only through the mirroring system. Some releases for some components (typically the older ones) are not available through the mirroring system.

See the individual websites listed above for the specific downloads, or use the Releases menu option.

How do I contribute, give feedback, fix bugs and so on?
The Commons project really needs and appreciates any contributions, including documentation help, source code and feedback.

Discussion occurs on the Commons mailing list.
We have an IRC channel on freenode - join #apache-commons.
Access to the SVN commons/proper repository is available both online and with a svn client.
Access to the SVN commons/sandbox repository is available both online and with a svn client.
Access to the SVN commons/dormant repository is available both online and with a svn client.
Related Components @Apache
The Commons HttpClient project used to be a part of Commons, but is now part of Apache HttpComponents - see Jakarta Commons HttpClient

Copyright © 2015 The Apache Software Foundation. All Rights Reserved.
Apache Commons, Apache, the Apache feather logo, and the Apache Commons project logos are trademarks of The Apache Software Foundation. All other marks mentioned may be trademarks or registered trademarks of their respective owners.